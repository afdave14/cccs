An inefficient Fibanocci sequence generator.

R2 is used as a pointer into memory, and as a counter.
R3 is the number of Fibonacci numbers to write

00  START       C000    SW R0, 0(R0)        M[0] = 0
01              C110    SW R1, 0(R1)        M[1] = 1
02              4202    ADDI R2, R0, 2      R2 = 2
03              4305    ADDI R3, R0, 5      R3 = 5
04              0333    ADD R3, R3, R3      R3 = 10
05              B00B    JMP 000B            goto LOOPTEST
06  LOOPBODY    842E    LW R4, -2(R2)       R4 = M[R2 - 2]
07              852F    LW R5, -1(R2)       R5 = M[R2 - 1]
08              0654    ADD R6, R5, R4      R6 = R4 + R5
09              C620    SW R6, 0(R2)        M[R2] = R6
0A              4221    ADDI R2, R2, 1      R2 = R2 + 1
0B  LOOPTEST    7723    SLT R7, R2, R3      R7 = 1 if R2 < R3 else 0
0C              9709    BNE R7, R0, -7      if (R7 != 0) goto LOOPBODY
0D  END         B00D    JMP 000D            goto END